plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group 'com.Monster.videoToAudio'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = "1.9"
targetCompatibility = "1.9"

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.monster.videotoaudio.vta'
    mainClass = 'com.monster.videotoaudio.vta.HelloApplication'
}
shadowJar {
    manifest {
        attributes(
                'Main-Class': 'com.monster.videotoaudio.vta.Main'
        )
    }
}

javafx {
    version = '20'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media']
}

dependencies {
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation 'org.openjfx:javafx-media:17'
//    compile group: 'ws.schild', name: 'jave-all-deps', version: '3.4.0'
    implementation 'commons-io:commons-io:2.11.0'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}
sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources', 'src/ffmpeg/bin']
        }
    }
}
jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}
jar {
    manifest {
        attributes 'Main-Class': 'com.monster.videotoaudio.vta.Main'
    }
}
jlinkZip {
    group = 'distribution'
}